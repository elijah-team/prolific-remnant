package tripleo.elijah.nextgen.rosetta.DeduceTypes2;

import org.jetbrains.annotations.NotNull;
import tripleo.elijah.comp.i.ErrSink;
import tripleo.elijah.lang.i.OS_Module;
import tripleo.elijah.stages.deduce.DeducePhase;
import tripleo.elijah.stages.logging.ElLog;

public class DeduceTypes2Rosetta {
   private final .DeduceTypes2Request request;

   public DeduceTypes2Rosetta(.DeduceTypes2Request var1) {
      throw new Error("Unresolved compilation problems: \n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n\tDeduceTypes2Request cannot be resolved to a type\n");
   }

   public OS_Module getModule() {
      throw new Error("Unresolved compilation problem: \n\tDeduceTypes2Request cannot be resolved to a type\n");
   }

   public DeducePhase getDeducePhase() {
      throw new Error("Unresolved compilation problem: \n\tDeduceTypes2Request cannot be resolved to a type\n");
   }

   public ErrSink getErrSink() {
      throw new Error("Unresolved compilation problem: \n\tDeduceTypes2Request cannot be resolved to a type\n");
   }

   public ElLog createLog_DeduceTypes2() {
      throw new Error("Unresolved compilation problem: \n");
   }

   private ElLog.@NotNull Verbosity getVerbosity() {
      throw new Error("Unresolved compilation problem: \n\tDeduceTypes2Request cannot be resolved to a type\n");
   }

   public ElLog createAndAddLog_DeduceTypes2() {
      throw new Error("Unresolved compilation problem: \n");
   }
}
